/**********************************************************************************
 * OPL 12.6.2.0 Data
 * 
 * Project: Opmap
 * Version: 1.0
 * Author: Giacomo Marciani
 *
 * Description: Operator Placement Problem (OPP): alternative PL{01} formulation 
 *				both for Mathematical Programming and Constraint Programming, 
 * 				as stated in "Optimal DSP Deployment" by prof. Francesco Lo Presti.
 *********************************************************************************/

 
/*********************************************
 * Resources Graph
 *********************************************/

nodesRES = {
// <id, capacity, speedup, availability>
<1, 2, 5.0, 0.5>,
<2, 4, 10.0, 0.5>,
<3, 4, 10.0, 0.5>,
<4, 4, 10.0, 0.5>,
<5, 8, 15.0, 0.5>,
<6, 8, 15.0, 0.5>
<7, 4, 10.0, 0.5>
<8, 4, 10.0, 0.5>
<9, 4, 10.0, 0.5>
<10, 2, 20.0, 0.5>
};

edgesRES = {
// <src, dst, delay, bandwidth, availability>
<1, 1, 0.0, infinity, 1.0>,
<1, 2, 1.0, 1000.0, 0.5>,
<1, 3, 1.0, 1000.0, 0.5>,
<1, 4, 1.0, 1000.0, 0.5>,
<1, 5, 1.0, 1000.0, 0.5>,
<1, 6, 1.0, 1000.0, 0.5>,
<1, 7, 1.0, 1000.0, 0.5>,
<1, 8, 1.0, 1000.0, 0.5>,
<1, 9, 1.0, 1000.0, 0.5>,
<1, 10, 1.0, 1000.0, 0.5>,

<2, 1, 1.0, 1000.0, 0.5>,
<2, 2, 0.0, infinity, 1.0>,
<2, 3, 1.0, 1000.0, 0.5>,
<2, 4, 1.0, 1000.0, 0.5>,
<2, 5, 1.0, 1000.0, 0.5>,
<2, 6, 1.0, 1000.0, 0.5>,
<2, 7, 1.0, 1000.0, 0.5>,
<2, 8, 1.0, 1000.0, 0.5>,
<2, 9, 1.0, 1000.0, 0.5>,
<2, 10, 1.0, 1000.0, 0.5>,

<3, 1, 1.0, 1000.0, 0.5>,
<3, 2, 1.0, 1000.0, 0.5>,
<3, 3, 0.0, infinity, 1.0>,
<3, 4, 1.0, 1000.0, 0.5>,
<3, 5, 1.0, 1000.0, 0.5>,
<3, 6, 1.0, 1000.0, 0.5>,
<3, 7, 1.0, 1000.0, 0.5>,
<3, 8, 1.0, 1000.0, 0.5>,
<3, 9, 1.0, 1000.0, 0.5>,
<3, 10, 1.0, 1000.0, 0.5>,

<4, 1, 1.0, 1000.0, 0.5>,
<4, 2, 1.0, 1000.0, 0.5>,
<4, 3, 1.0, 1000.0, 0.5>,
<4, 4, 0.0, infinity, 1.0>,
<4, 5, 1.0, 1000.0, 0.5>,
<4, 6, 1.0, 1000.0, 0.5>,
<4, 7, 1.0, 1000.0, 0.5>,
<4, 8, 1.0, 1000.0, 0.5>,
<4, 9, 1.0, 1000.0, 0.5>,
<4, 10, 1.0, 1000.0, 0.5>,

<5, 1, 1.0, 1000.0, 0.5>,
<5, 2, 1.0, 1000.0, 0.5>,
<5, 3, 1.0, 1000.0, 0.5>,
<5, 4, 1.0, 1000.0, 0.5>,
<5, 5, 0.0, infinity, 1.0>,
<5, 6, 1.0, 1000.0, 0.5>,
<5, 7, 1.0, 1000.0, 0.5>,
<5, 8, 1.0, 1000.0, 0.5>,
<5, 9, 1.0, 1000.0, 0.5>,
<5, 10, 1.0, 1000.0, 0.5>,

<6, 1, 1.0, 1000.0, 0.5>,
<6, 2, 1.0, 1000.0, 0.5>,
<6, 3, 1.0, 1000.0, 0.5>,
<6, 4, 1.0, 1000.0, 0.5>,
<6, 5, 1.0, 1000.0, 0.5>,
<6, 6, 0.0, infinity, 1.0>,
<6, 7, 1.0, 1000.0, 0.5>,
<6, 8, 1.0, 1000.0, 0.5>,
<6, 9, 1.0, 1000.0, 0.5>,
<6, 10, 1.0, 1000.0, 0.5>,

<7, 1, 1.0, 1000.0, 0.5>,
<7, 2, 1.0, 1000.0, 0.5>,
<7, 3, 1.0, 1000.0, 0.5>,
<7, 4, 1.0, 1000.0, 0.5>,
<7, 5, 1.0, 1000.0, 0.5>,
<7, 6, 1.0, 1000.0, 0.5>,
<7, 7, 0.0, infinity, 1.0>,
<7, 8, 1.0, 1000.0, 0.5>,
<7, 9, 1.0, 1000.0, 0.5>,
<7, 10, 1.0, 1000.0, 0.5>,

<8, 1, 1.0, 1000.0, 0.5>,
<8, 2, 1.0, 1000.0, 0.5>,
<8, 3, 1.0, 1000.0, 0.5>,
<8, 4, 1.0, 1000.0, 0.5>,
<8, 5, 1.0, 1000.0, 0.5>,
<8, 6, 1.0, 1000.0, 0.5>,
<8, 7, 1.0, 1000.0, 0.5>,
<8, 8, 0.0, infinity, 1.0>,
<8, 9, 1.0, 1000.0, 0.5>,
<8, 10, 1.0, 1000.0, 0.5>,

<9, 1, 1.0, 1000.0, 0.5>,
<9, 2, 1.0, 1000.0, 0.5>,
<9, 3, 1.0, 1000.0, 0.5>,
<9, 4, 1.0, 1000.0, 0.5>,
<9, 5, 1.0, 1000.0, 0.5>,
<9, 6, 1.0, 1000.0, 0.5>,
<9, 7, 1.0, 1000.0, 0.5>,
<9, 8, 1.0, 1000.0, 0.5>,
<9, 9, 0.0, infinity, 1.0>,
<9, 10, 1.0, 1000.0, 0.5>,

<10, 1, 1.0, 1000.0, 0.5>,
<10, 2, 1.0, 1000.0, 0.5>,
<10, 5, 1.0, 1000.0, 0.5>,
<10, 4, 1.0, 1000.0, 0.5>,
<10, 5, 1.0, 1000.0, 0.5>,
<10, 6, 1.0, 1000.0, 0.5>,
<10, 7, 1.0, 1000.0, 0.5>,
<10, 8, 1.0, 1000.0, 0.5>,
<10, 9, 1.0, 1000.0, 0.5>,
<10, 10, 0.0, infinity, 1.0>
};


/*********************************************
 * DSP Operators
 *********************************************/
 
operators = {
// <name>
<"src">,
<"snk">,
<"op1">, 
<"op2">, 
<"op3">, 
<"op4">, 
<"op5">, 
<"op6">
};
 
 
/*********************************************
 * DSP Application Graph
 *********************************************/

nodesDSP = {
// <id, operator, capacity, execution, flowIn, flowOut>
<1, "src", 2, 3, 0.0, 10.0>,
<2, "op1", 3, 3, 10.0, 1.0>,
<3, "op2", 4, 3, 11.0, 1.0>,
<4, "op3", 3, 3, 12.0, 1.0>,
<5, "op4", 3, 3, 2.0, 1.0>,
<6, "op5", 3, 3, 2.0, 1.0>,
<7, "snk", 2, 3, 1.0, 0.0>
};

edgesDSP = {
// <src, dst, flow>
<1, 2, 10.0>,
<1, 3, 10.0>,
<1, 4, 10.0>,
<2, 3, 1.0>,
<2, 4, 1.0>,
<3, 4, 1.0>,
<3, 5, 1.0>,
<4, 5, 1.0>,
<4, 6, 1.0>,
<5, 6, 1.0>,
<6, 7, 1.0>,
};

pathsDSP = {
// <{node1, node2, ..., noden}>
<{1, 2, 3, 4, 5, 6, 7}>
<{1, 2, 3, 4, 6, 7}>
<{1, 2, 3, 5, 6, 7}>
<{1, 2, 4, 5, 6, 7}>
<{1, 2, 4, 6, 7}>
<{1, 3, 4, 5, 6, 7}>
<{1, 3, 4, 6, 7}>
<{1, 3, 5, 6, 7}>
}; 
 
 
/*********************************************
 * Eligible Pins/Links
 *********************************************/

eligiblePins = 
[ // [i,j] = 1 iff DSP node i can be mapped on RES node j, 0 otherwise
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 1, 1, 1, 1, 1, 1, 1, 1, 0],
[0, 1, 1, 1, 1, 1, 1, 1, 1, 0],
[0, 1, 1, 1, 1, 1, 1, 1, 1, 0],
[0, 1, 1, 1, 1, 1, 1, 1, 1, 0],
[0, 1, 1, 1, 1, 1, 1, 1, 1, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
];
 
/*********************************************
 * Response Time
 *********************************************/
 
wR = 0.5;
maxR = 20000.0;
 
 
/*********************************************
 * Availability
 *********************************************/
 
wA = 0.5;
minA = 0.05;